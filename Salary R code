# Set working directory
setwd("~/Documents/Year 2 Fall 2024/STP 530/Project/stp_530_repo")

# Load data

install.packages("freqparcoord") # Install package
library(freqparcoord) # Load library

data(prgeng) # Load data and store

# View data
salary.data <- prgeng
head(salary.data)

?str

# ------ STEP 1: Data Exploration and Preprocessing ------- #

summary(prgeng) # Get an overview of data; describe the observation
str(prgeng) # Show data types (num or cat?)
colSums(is.na(prgeng)) # Check for missing values

# Visualize salary distribution
hist(prgeng$wageinc, breaks = 50, main = "Salary distribution", xlab = "Annual salary")
hist(prgeng$age, breaks = 50, main = "Age distribution", xlab = "Ages")
hist(prgeng$cit, breaks = 50, main = "Citizenship distribution", xlab = "Citizenship")
hist(prgeng$educ, breaks = 50, main = "Education distribution", xlab = "Education level")
hist(prgeng$engl, breaks = 50, main = "English proficiency distribution", xlab = "English proficiency level")
hist(prgeng$occ, breaks = 50, main = "Occupation distribution", xlab = "Occupation")
hist(prgeng$birth, breaks = 50, main = "Birth place distribution", xlab = "Birth place")
hist(prgeng$sex, breaks = 50, main = "Sex distribution", xlab = "Sex")
hist(prgeng$wkswrkd, breaks = 50, main = "Weeks worked distribution", xlab = "Weeks worked")
hist(prgeng$yrentry, breaks = 50, main = "Year of entry to US distribution", xlab = "Year of entry to US")
hist(prgeng$powspuma, breaks = 50, main = "Location of work distribution", xlab = "Location of work")

pairs(~wageinc+age+cit+educ+engl+occ+birth+sex+wkswrkd+yrentry+powspuma, data=salary.data, main = "Scatterplot Matrix")

# The relation between wage and age is not linear, indeed not even monotonic. After the early 40s, one's wage tends to decrease. 
# As with any observational dataset, the underlying factors are complex, 
# but it does seem there is an age discrimination problem in Silicon Valley. 
#( And it is well documented in various studies and litigation.)
# Note the horizontal streaks at the very top and very bottom of the picture. 
# Some people in the census had 0 income (or close to it), as they were not working. 
# And the census imposed a top wage limit of $350,000 (probably out of privacy concerns), so that higher numbers were truncated to that value.
plot(salary.data$age,salary.data$wageinc)

# By gender; male and female
plot(salary.data$age, salary.data$wageinc, col=salary.data$sex)

# The red dots are the women. (Details below.) Are they generally paid less than men? 
# There seems to be a hint of that, but detailed statistical analysis is needed.

# It would be good to have better labels on the axes, and maybe smaller dots:
plot(salary.data$age, salary.data$wageinc, col=as.factor(salary.data$sex),
       xlab='age',ylab='wage',cex=0.6)



# -------- STEP 2: Variable Selection and Initial Modeling ---------- #

cor(prgeng$wageinc, prgeng$age, use = "complete.obs")
cor(prgeng$wageinc, prgeng$cit, use = "complete.obs")
cor(prgeng$wageinc, prgeng$educ, use = "complete.obs")
cor(prgeng$wageinc, prgeng$engl, use = "complete.obs")
cor(prgeng$wageinc, prgeng$occ, use = "complete.obs")
cor(prgeng$wageinc, prgeng$birth, use = "complete.obs")
cor(prgeng$wageinc, prgeng$sex, use = "complete.obs")
cor(prgeng$wageinc, prgeng$wkswrkd, use = "complete.obs")
cor(prgeng$wageinc, prgeng$yrentry, use = "complete.obs")
cor(prgeng$wageinc, prgeng$powspuma, use = "complete.obs")

# -------- STEP 3: Check Linear Regression Assumption

model <- lm(wageinc ~ age + cit + educ + engl + occ + birth + sex + wkswrkd + yrentry + powspuma, data = salary.data)

summary(model)


# Residuals vs. Fitted plot; Check for constant variance
plot(model$fitted.values, residuals(model),
     xlab = "Fitted Values",
     ylab = "Residuals",
     main = "Residuals vs. Fitted Values",
     pch = 20, col = "blue")
abline(h = 0, col = "red", lwd = 2)

# Same as ggplot below
dev.off()

library(ggplot2)

residual_data <- data.frame(
  Fitted = model$fitted.values,
  Residuals = residuals(model)
)

ggplot(residual_data, aes(x = Fitted, y = Residuals)) +
  geom_point(color = "blue", alpha = 0.6) +
  geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
  labs(title = "Residuals vs. Fitted Values",
       x = "Fitted Values",
       y = "Residuals") +
  theme_minimal()




# Check for linear fit; plot residuals against each predictor variable
residual_value <- residuals(model)

plot(salary.data$age, residual_value,
     xlab = "Age",
     ylab = "Residuals",
     main = "Residual Plot: Residuals vs Age",
     pch = 16, col = "blue")
     
abline(h = 0, col = "red", lwd = 2)

qqnorm(residual_value, main = "Normal Q-Q Plot for residuals for Age") # Normally distributed?
qqline(residual_value, col = "red", lwd = 2) # Reference line



# Required libraries
library(ggplot2)


# Obtain residuals
residual_value <- residuals(model)

# Define predictors
predictors <- c("age", "cit", "educ", "engl", "occ", "birth", 
                "sex", "wkswrkd", "yrentry", "powspuma")

# Create plots using a for loop
for (predictor in predictors) {
  # Residuals vs Predictor
  plot(salary.data[[predictor]], residual_value,
       xlab = predictor,
       ylab = "Residuals",
       main = paste("Residual Plot: Residuals vs", predictor),
       pch = 16, col = "blue")
  abline(h = 0, col = "red", lwd = 2)
  
  # Wait for user input before showing the next plot
  readline(prompt = "Press [Enter] to see the next plot")
  
  # Q-Q Plot for residuals
  qqnorm(residual_value, main = paste("Normal Q-Q Plot for Residuals vs", predictor))
  qqline(residual_value, col = "red", lwd = 2)
  
  # Wait for user input again
  readline(prompt = "Press [Enter] to see the next plot")
}








?prgeng


# NOTE: THIS DATA NEEDS SERIOUS WORK

summary(salary.data)

# Checking outliers
boxplot.stats(salary.data$age)$out # Remove the ages; compare with industry standard
boxplot.stats(salary.data$cit)$out # No outlier
boxplot.stats(salary.data$educ)$out # Outlier; but some jobs still employ people with no college
boxplot.stats(salary.data$engl)$out # Remove because I don't understand
boxplot.stats(salary.data$occ)$out # Data is valid
boxplot.stats(salary.data$birth)$out # Remove, I don't even understand what it represents
boxplot.stats(salary.data$sex)$out # Data is valid
boxplot.stats(salary.data$wageinc)$out # Data is valid
boxplot.stats(salary.data$wkswrkd)$out # Data is valid
boxplot.stats(salary.data$yrentry)$out # Data is valid
boxplot.stats(salary.data$powspuma)$out # Remove, I don't even understand what it represents

hist(salary.data$wkswrkd)
# I cannot understand birth, powspuma, engl - we remove

# Treating the outliers in Age less than greater than 40

remove_age_outliers <- boxplot.stats(salary.data$age)$out
outlier_index <- which(salary.data$age %in% c(remove_age_outliers))
outlier_index # Pick out specific row where the outliers are found

salary.data[outlier_index,] # Show all data with age outliers


# Show all data with age outliers
outlier_data <- salary.data[outlier_index, ]
print(outlier_data)  # Print rows with outliers

# Create a new dataset with outliers removed
salary_data_no_outliers <- salary.data[-outlier_index, ]

# Verify that the new dataset does not contain the outliers
boxplot(salary_data_no_outliers$age, main = "Boxplot Without Outliers")

boxplot.stats(salary_data_no_outliers$age)$out

# ------ Check outlier again 

remove_age_outliers2 <- boxplot.stats(salary_data_no_outliers$age)$out
outlier_index2 <- which(salary_data_no_outliers$age %in% c(remove_age_outliers2))
outlier_index2 # Pick out specific row where the outliers are found

salary_data_no_outliers[outlier_index2,] # Show all data with age outliers
# Create a new dataset with outliers removed
new_salary_data_no_outliers <- salary_data_no_outliers[-outlier_index2, ]

boxplot(new_salary_data_no_outliers$age, main = "Boxplot Without Outliers")

boxplot.stats(new_salary_data_no_outliers$age)$out

# --- Check outlier again
remove_age_outliers3 <- boxplot.stats(new_salary_data_no_outliers$age)$out
outlier_index3 <- which(new_salary_data_no_outliers$age %in% c(remove_age_outliers3))
outlier_index3 # Pick out specific row where the outliers are found

new_salary_data_no_outliers[outlier_index3,] # Show all data with age outliers
# Create a new dataset with outliers removed
upd_salary_data_no_outliers <- new_salary_data_no_outliers[-outlier_index3, ]

boxplot(upd_salary_data_no_outliers$age, main = "Boxplot Without Outliers")

boxplot.stats(upd_salary_data_no_outliers$age)$out





# ------ NO MORE OUTLIERS IN AGE; FIXED OUTLIERS --------







